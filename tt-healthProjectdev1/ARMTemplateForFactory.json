{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "tt-healthProjectdev1"
		},
		"AzureDataLakeStorage1_ls_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1_ls'"
		},
		"AzureDatabricksDeltaLake1_ls_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricksDeltaLake1_ls'"
		},
		"hosa_sql_ls_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'hosa_sql_ls'"
		},
		"AzureDataLakeStorage1_ls_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://ttadlsdevnewavinashh.dfs.core.windows.net/"
		},
		"hosa_sql_ls_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "trndytch-sql-serv.database.windows.net"
		},
		"hosa_sql_ls_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "@linkedService().db_name"
		},
		"hosa_sql_ls_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sql-admin"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pl_emr_src_landing')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "lkp_emr_configs",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "generic_adls_flat_file_ds",
								"type": "DatasetReference",
								"parameters": {
									"file_name": {
										"value": "load_config.csv",
										"type": "Expression"
									},
									"file_path": {
										"value": "emr",
										"type": "Expression"
									},
									"container": {
										"value": "configs",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "lkp_emr_configs",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('lkp_emr_configs').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "file_exists",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@and(equals(activity('file_exists').output.exists,true),equals(item().is_active,'1'))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "archive",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [
													{
														"name": "Source",
														"value": "@{'bronze'}/@{item().targetpath}/@{split(item().tablename,'.')[1]}"
													},
													{
														"name": "Destination",
														"value": "@{'bronze'}/@{concat(item().targetpath,'/archive/',formatDateTime(utcNow(),'yyyy'),'/',formatDateTime(utcNow(),'%M'),'/',formatDateTime(utcNow(),'%d'))}/@{split(item().tablename,'.')[1]}"
													}
												],
												"typeProperties": {
													"source": {
														"type": "ParquetSource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "ParquetReadSettings"
														}
													},
													"sink": {
														"type": "ParquetSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "ParquetWriteSettings"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "generic_adls_parquet_ds",
														"type": "DatasetReference",
														"parameters": {
															"container": {
																"value": "bronze",
																"type": "Expression"
															},
															"file_path": {
																"value": "@item().targetpath",
																"type": "Expression"
															},
															"file_name": {
																"value": "@split(item().tablename,'.')[1]",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "generic_adls_parquet_ds",
														"type": "DatasetReference",
														"parameters": {
															"container": {
																"value": "bronze",
																"type": "Expression"
															},
															"file_path": {
																"value": "@concat(item().targetpath,'/archive/',formatDateTime(utcNow(),'yyyy'),'/',formatDateTime(utcNow(),'%M'),'/',formatDateTime(utcNow(),'%d'))",
																"type": "Expression"
															},
															"file_name": {
																"value": "@split(item().tablename,'.')[1]",
																"type": "Expression"
															}
														}
													}
												]
											}
										]
									}
								},
								{
									"name": "If Condition2",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "If Condition1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(item().loadtype,'Full')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "incremental_load_cp",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "fetch_logs",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderQuery": {
															"value": "@concat('select *,''',item().datasource,''' as datasource from ',item().tablename,' where ',item().watermark,' >= ''',activity('fetch_logs').output.firstRow.last_fetched_date,'''')",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"sink": {
														"type": "ParquetSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "ParquetWriteSettings"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "generic_sql_ds",
														"type": "DatasetReference",
														"parameters": {
															"db_name": {
																"value": "@item().database",
																"type": "Expression"
															},
															"schema_name": {
																"value": "@split(item().tablename,'.')[0]",
																"type": "Expression"
															},
															"table_name": "@split(item().tablename,'.')[1]"
														}
													}
												],
												"outputs": [
													{
														"referenceName": "generic_adls_parquet_ds",
														"type": "DatasetReference",
														"parameters": {
															"container": {
																"value": "bronze",
																"type": "Expression"
															},
															"file_path": {
																"value": "@item().targetpath",
																"type": "Expression"
															},
															"file_name": {
																"value": "@split(item().tablename,'.' )[1]",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "fetch_logs",
												"type": "Lookup",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 2,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureDatabricksDeltaLakeSource",
														"query": {
															"value": "@concat('select coalesce(cast(max(loaddate) as date),''','1900-01-01',''') as last_fetched_date from audit.load_logs where',' data_source=''',item().datasource,''' and tablename=''',item().tablename,'''')",
															"type": "Expression"
														}
													},
													"dataset": {
														"referenceName": "AzureDatabricksDeltaLakeDataset1",
														"type": "DatasetReference",
														"parameters": {
															"schema_name": "'aa'",
															"table_name": "'a'"
														}
													},
													"firstRowOnly": true
												}
											},
											{
												"name": "insert_logs_inc_load",
												"type": "Lookup",
												"dependsOn": [
													{
														"activity": "incremental_load_cp",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureDatabricksDeltaLakeSource",
														"query": {
															"value": "@concat('insert into audit.load_logs(data_source,tablename,numberofrowscopied,watermarkcolumnname,loaddate) values (''',item().datasource,''', ''',item().tablename,''',''',activity('incremental_load_cp').output.rowscopied,''',''',item().watermark,''',''',utcNow(),''')')",
															"type": "Expression"
														}
													},
													"dataset": {
														"referenceName": "AzureDatabricksDeltaLakeDataset1",
														"type": "DatasetReference",
														"parameters": {
															"schema_name": {
																"value": "'aa'",
																"type": "Expression"
															},
															"table_name": {
																"value": "'aa'",
																"type": "Expression"
															}
														}
													},
													"firstRowOnly": false
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Full_Load_CP",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 3,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderQuery": {
															"value": "@concat('select *,''', replace(item().datasource,'''',''''''),''' as datasource from ', replace(item().tablename,'''',''''''))\n\n\n\n\n",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"sink": {
														"type": "ParquetSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "ParquetWriteSettings"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "generic_sql_ds",
														"type": "DatasetReference",
														"parameters": {
															"db_name": {
																"value": "@item().database",
																"type": "Expression"
															},
															"schema_name": {
																"value": "@split(item().tablename,'.')[0]",
																"type": "Expression"
															},
															"table_name": {
																"value": "@split(item().tablename,'.')[1]",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "generic_adls_parquet_ds",
														"type": "DatasetReference",
														"parameters": {
															"container": {
																"value": "bronze",
																"type": "Expression"
															},
															"file_path": {
																"value": "@item().targetpath",
																"type": "Expression"
															},
															"file_name": {
																"value": "@split(item().tablename,'.')[1]",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "insert_Logs_Full_Load",
												"type": "Lookup",
												"dependsOn": [
													{
														"activity": "Full_Load_CP",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 2,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureDatabricksDeltaLakeSource",
														"query": {
															"value": "@concat('insert into audit.load_logs(data_source,tablename,numberofrowscopied,watermarkcolumnname,loaddate) values(''',item().datasource,''',''',item().tablename,''',''',activity('Full_Load_CP').output.rowscopied,''',''',item().watermark,''',''',formatDateTime(utcNow(),'yyyy-MM-dd HH:mm:ss'),''')')\n\n\n",
															"type": "Expression"
														}
													},
													"dataset": {
														"referenceName": "AzureDatabricksDeltaLakeDataset1",
														"type": "DatasetReference",
														"parameters": {
															"schema_name": "'aa'",
															"table_name": "'aa'"
														}
													},
													"firstRowOnly": false
												}
											}
										]
									}
								},
								{
									"name": "file_exists",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "generic_adls_flat_file_ds",
											"type": "DatasetReference",
											"parameters": {
												"file_name": {
													"value": "@split(item().tablename,'.')[1]",
													"type": "Expression"
												},
												"file_path": {
													"value": "@item().targetpath",
													"type": "Expression"
												},
												"container": {
													"value": "bronze",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"exists"
										],
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-05-02T18:16:32Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/generic_adls_flat_file_ds')]",
				"[concat(variables('factoryId'), '/datasets/generic_adls_parquet_ds')]",
				"[concat(variables('factoryId'), '/datasets/generic_sql_ds')]",
				"[concat(variables('factoryId'), '/datasets/AzureDatabricksDeltaLakeDataset1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricksDeltaLakeDataset1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDatabricksDeltaLake1_ls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schema_name": {
						"type": "string"
					},
					"table_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureDatabricksDeltaLakeDataset",
				"typeProperties": {
					"database": {
						"value": "@dataset().schema_name",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().table_name",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricksDeltaLake1_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/generic_adls_flat_file_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1_ls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"file_name": {
						"type": "string"
					},
					"file_path": {
						"type": "string"
					},
					"container": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().file_path",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().container",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/generic_adls_parquet_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1_ls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container": {
						"type": "string"
					},
					"file_path": {
						"type": "string"
					},
					"file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().file_path",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().container",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/generic_sql_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "hosa_sql_ls",
					"type": "LinkedServiceReference",
					"parameters": {
						"db_name": {
							"value": "@dataset().db_name",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"db_name": {
						"type": "string"
					},
					"schema_name": {
						"type": "string"
					},
					"table_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema_name",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().table_name",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/hosa_sql_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1_ls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_ls_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_ls_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricksDeltaLake1_ls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricksDeltaLake",
				"typeProperties": {
					"domain": "https://adb-2478482481439469.9.azuredatabricks.net/",
					"clusterId": "0429-102449-69yyp59b",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricksDeltaLake1_ls_accessToken')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/hosa_sql_ls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"db_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('hosa_sql_ls_properties_typeProperties_server')]",
					"database": "[parameters('hosa_sql_ls_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('hosa_sql_ls_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('hosa_sql_ls_password')]"
					}
				}
			},
			"dependsOn": []
		}
	]
}